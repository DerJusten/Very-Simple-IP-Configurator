<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>